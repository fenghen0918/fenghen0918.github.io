<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实用资源链接整理</title>
      <link href="/2022/02/15/xue-xi/zi-yuan-lian-jie/"/>
      <url>/2022/02/15/xue-xi/zi-yuan-lian-jie/</url>
      
        <content type="html"><![CDATA[<p>链接整理</p><h3 id="资源链接"><a href="#资源链接" class="headerlink" title="资源链接"></a>资源链接</h3><ol><li>BootCDN（JS加速链接库）：<a href="http://www.bootcdn.cn/">www.bootcdn.cn</a></li><li>oci鼠标图标：<a href="https://zhutix.com/ico/ori-cursors/">https://zhutix.com/ico/ori-cursors/</a></li><li>图标：<a href="https://fontawesome.com/icons?d=gallery&amp;q=rain">https://fontawesome.com/icons?d=gallery&amp;q=rain</a></li><li>emoji符号大全：<a href="http://www.fhdq.net/emoji/emojifuhao.html">http://www.fhdq.net/emoji/emojifuhao.html</a></li><li>小歪API：<a href="https://api.ixiaowai.cn/">https://api.ixiaowai.cn/</a></li><li>Microsoft Office 2016免费破解版下载：<a href="http://www.paid8.com/">http://www.paid8.com/</a></li></ol><h3 id="工具链接"><a href="#工具链接" class="headerlink" title="工具链接"></a>工具链接</h3><ol><li>重装win10系统：<a href="https://iknow.lenovo.com.cn/detail/dc_177365.html">https://iknow.lenovo.com.cn/detail/dc_177365.html</a></li><li>RGB颜色值转换：<a href="https://www.sioe.cn/yingyong/yanse-rgb-16/">https://www.sioe.cn/yingyong/yanse-rgb-16/</a></li><li>图片去底：<a href="https://www.aigei.com/bgremover">https://www.aigei.com/bgremover</a></li><li>短视频解析下载：<a href="https://www.heytoolman.com/rmwatermark">https://www.heytoolman.com/rmwatermark</a></li><li>抖音背景音乐获取：<a href="http://tool.qqjsz.cn/douyin_music/">http://tool.qqjsz.cn/douyin_music/</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PLSQL使用</title>
      <link href="/2021/06/01/mysql/plsql-shi-yong/"/>
      <url>/2021/06/01/mysql/plsql-shi-yong/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4bae55ab1b5a0bfece9dc8bf00c918023b2bd794ce920a9023e1ce517e1cff9c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装PLSQL</title>
      <link href="/2021/05/11/linux/windows-an-zhuang-plsql/"/>
      <url>/2021/05/11/linux/windows-an-zhuang-plsql/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows安装PLSQL"><a href="#Windows安装PLSQL" class="headerlink" title="Windows安装PLSQL"></a>Windows安装PLSQL</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>还有个文件夹没截上，instantclient_11_2</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210511093323.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>点击plsqldev1201x64.msi进行安装</p></li><li><p>点击桌面安装好的快捷方式</p></li><li><p>进行注册，注册码.txt</p></li><li><p>配置oci文件</p><ol><li><p>将instantclient_11_2文件夹剪切到plsql的安装目录</p><ol><li>安装目录可以右键快捷方式查看文件位置</li></ol></li><li><p>点击程序中的Configure-Perferences</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210511094109.png"></p><p>刚才剪切文件夹的路径<code>D:\oracle\PLSQLDeveloper12\instantclient_11_2</code></p><p>文件夹中的oci文件路径<code>D:\oracle\PLSQLDeveloper12\instantclient_11_2\oci.dll</code></p></li></ol></li><li><p>关闭程序，重新打开登录</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210511094334.png"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运维问题集合</title>
      <link href="/2021/04/29/linux/yun-wei-wen-ti-ji-he/"/>
      <url>/2021/04/29/linux/yun-wei-wen-ti-ji-he/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e0661866204fc787ea38cc9763079d282c2be1d9e8dc18d7e10c129b9f8cdae5">50401a1b4252edfef05a7c1120311a28d7c9779e54cbf0d6b9b880a49e65437b6f4ecd595733aa0e6ab92dc56eeb4cbcbe86739bdfde2a6bcbddac2804966a7bd46fc8f18ad4a6b0ed56684a20d7eb97d1f92b20cfb9139867f6f1519b109f73782487dde5d6450348be6d108fcb3d1a12b1268894786a1edb349bee072a5f084759428d098f78f4b09ba3e8627071b32063e3b0d35da850907714b349984e5301694d7e0ca2e6c63076fed9efa467ec09423f36b84fac5aab084093dc6e76a7000023cd6a1ad9d241faddb962bdc66f1279c6ed6e1f3af2f7d3169e1a69b670b58b84e329647116b91d683bd75f536c0327076f26ce7737db70576aa8e15f4c381b6928a71eda7c6b98cef3e051a4f756eee052a7d12e574e00f215fdf6c737f75cad0fd09dfc7bd31d61650f2fc9a4da5a3d869d188852ed52e07522281ca27b425a98d0928d53780a357651aaf79240be35bdbea3649927968de707cd3122f46b0bbce6e1edda2657ca2df818f7de1d5a5967d2c7ee91efa11d9b9642a237af12a645c6e28d221438d85576e673c81423f909d52da34271807444384283cfafbac858afd5c8b2e634de2e74b1b2719047276fa7fc70b2f5c236281d070076ca85aad49e6b4907113a54a0ed33aea03fecd1d95b048736855ba9f9317b9b8a63053a755f8a9cf411983e24f696ab7823b28c7bb9b304bfcc4833d7517fafb233aaf2735b63abbb232fdb3d4ed7c909ee936ab03feb1a9604719acacbb2306868a8481dbfb1de944181abc8ddef6234e1ae3d9cb49019ee207fd5a20be586b0c0ceb7d6c9849aae311915348e1edb5081915805de724fae94b1506391f998716d58fd328ed1d5a8ec1895d06085d4484ac9324bd9c2e103bdc7bf1e272458fb23be457c086a04e40595d58cd33e0f68f02b014a5d07ce0bcce62f7d80e638297824454bd985ebbc1f305c3d8719f05f66a22851428216c9c23ca677f562c0191f731e0220340c659ce5c9a583e945cbc99901477ef0271bb064443b4defc928f5e12f3bab62784afd01e5493af92c31af1ecb6b3dbedec9a6de733b4307db224540905bdacb99c6c524615bc747fcceda73cddf48621da39525b0602ad75bec54b4977a9d39d9ba8562f68cbd04d74d3a3e56a339850ed2ecb01082f94aaad40c08a0fa3fc44eea144df38c71efbd0e26ca58f8311beab8bb730caa04dc0cd8b18f5875b435510d4c4ff35e74c2cd834d235454d9f9f3cd111cfb97ef2c4eff6d785587c25a8c1851319bdcbdb77123e6fe2440695fd38f6d33040ee5d8901dc0ce0a38d96be9d2878609ce8fb05b167ef4b8c9ab3ecccce1c73cd706b7bba9bdd82e3ee5b151ade15288d22f2bba7fff5bc1d46384f287a89487649d8b4113c15fce9e9d6af28c3d480ba944d8ad9dd9cded68ac4a4f2b9793ab126bfc879c2bf3ee552e8656eab1f0c0d03fb2ff82cdb529c99109b7bdecd45099230ed75b7b451209ff1dd1a7d9d422fefb5a4861d6c077d0afad84dee79f25e56c3c94f40eac7398bfecdd74465dccf45b68cc1fa85ba6a2bc3680d02a063a9c1b43acd26c09679634d4b15e98a59acc133398df10cf353eed5f22aa8c00068462f86fa29616a16004b0030221178e55e42a7f4f44a2d5c6367e7e8e69807fb79b9ad652806d521f68f30a53b1c3d1e49ecc9949f53ea05ad9c27dc1352cdd140874d8a6851d2431c991be89da1b289cef3e20d47baabbbd5e8dedab18699593a576782dd7630113cff13e21f86669c833fc0e3a8a8e0ef243a5fefb2af5f1ee2e0a4c3afd7c5ab810c63275ceddc4c6db8eab65a978384ccbffa66852ee354341a3868a6e367566b61a985b3e3e73fe892b92e56205147aabb3d9b92583590abe581dcbf8470ab40437593ff01b15df5d1e0fa4194799667e2ac605c6168819ce0eceb886f3bbb591dd89f33eb26fd9f06fa591df3d96b067fc50f0a8b5802b4a838a680873a2952867e4bcfb6800fc1b0aa614d324b78eb1e6209ea31b33e70c7a5f81d7e3e3542e83440b29722d2caa14015f79a90d49b42e77fd88ba25b11052e738df3dea33184f38c9e26edbf92ec7ad683dba0118c9e133b0639986f9f98c80ab8cf84aae7dec259e8f1612874da507552a956d655f39ab8b01db801bd2ca939f39b47bc6fc57ff731dc5a230520486ecbded1cd5202f4e6e330060a8723ba56e98ee881fb37bed2c290e991cc6d975339253e6713af4d2bbfbb05f57a91c793478ee7bfe55a9a24a33cf15d6cce1b017896cd77e2d68bc8e0b1e7183b38c3ccd35c70e21703e6d195697c82a2f4e1d4668416fdda26fbf0c64f6af30e7de8b8ac439ac9152ba8343a077e391d65c99b4082997e08ffb1231afb48d45e53fc8844df6aa9c23c7bc6be6108d62c672a54110fa8ca3fab1a3a2456d9427aa0029d36e71408e5b7d439c043f5c78cb32fc7dd9f91ca447c1948879281dc00ed0e3046a58c691ae9bfb709dc63a192adacce2428e700775d4f4f2f32223755ac9e70e431620981f3d0db080e0f3d27855f28a27d30d68163d481fb460d2e39245338d06ef90f476dc4cf03a8e0e170a566b0d4da317fee189a399ac882677ec2a0a419f6ef69d2bda61813026cb0dbc6bb96e52175f6b14a7c9b3833f8d8a93933af44bb84a90a205adbb75d71bd556c45a9e1bbbd06bd811af1acc062e225bb79c0c1d97b540caa9ca378cde94887b3ffd638b08f337243e0c0711ecad5675276a3763e84d2521b8223fb2318ada06fa06d93559ad170009e58a3f84b18b9998cbb8c3c0b1961ce839e56735eee4f2456a4d876bbd820b123c381b33712290752bba6cee6c606f0b708e18461022468fbc17ff707d9bcad87c394de99cad619daa6ea569884b12f402c173775482b07fb7b376e600b85dc9f476a41ce0add5895af6ae62af9b8fc69611f20dc2183417420fde7b1cf468f96daa363dd3aa95f8fe193106815278780829c70c22d5215b56defb6a6bc4c0a86cd0040536e641a7b0e16d174af10a75be3567e6a57a4cf4015c1b5f105e1614084d641dc8ff7cf8699a7eb869007ee4536069b2f70f672d7c0ad7f4a79bbe80f583f37d50ab7982686a1ca2315c8c893efea6f2cb5bb3b4ca9c98a4d85dd054060db287542109ada3aab3436f28c2563738f561b9e97a690df9da2e5364e7feb180157ad70ad2bbc83ea297337a03a6c421fe9899b404746c920e91f4aa2c0c69938e033939b9421b98ba83f359e6b5b2a56f86b16b610b3e907bc0f011ab3dbe7bb42ba4c17e2bddb2c5df31bb4b7b50df66fe5de77092c73f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Mysql</title>
      <link href="/2021/04/26/linux/linux-an-zhuang-mysql/"/>
      <url>/2021/04/26/linux/linux-an-zhuang-mysql/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="39c3983e129518686172148da0d13b4a91eb104ae696e95c8e6d2b525a652ba9"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Oracle</title>
      <link href="/2021/04/25/linux/linux-an-zhuang-oracle/"/>
      <url>/2021/04/25/linux/linux-an-zhuang-oracle/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3d3c6407ffc6afc5f8b5b649b3350acfeaf323f00f8e8f5e8362ad801a62dcb0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络配置</title>
      <link href="/2021/04/24/linux/linux-wang-luo/"/>
      <url>/2021/04/24/linux/linux-wang-luo/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="19064a6949111756ad2a99179d318956931e11e4710be0d1f4b0dda4f9da2908"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows虚拟机安装</title>
      <link href="/2021/04/22/linux/windows-xu-ni-ji-an-zhuang/"/>
      <url>/2021/04/22/linux/windows-xu-ni-ji-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="windows虚拟机安装"><a href="#windows虚拟机安装" class="headerlink" title="windows虚拟机安装"></a>windows虚拟机安装</h1><blockquote><p>windows虚拟机</p><p>windows2012R2 x64</p></blockquote><p><a href="https://blog.csdn.net/qq_28189423/article/details/89485402">https://blog.csdn.net/qq_28189423/article/details/89485402</a></p><h2 id="虚拟机扩容"><a href="#虚拟机扩容" class="headerlink" title="虚拟机扩容"></a>虚拟机扩容</h2><blockquote><p>在windows虚拟机中安装很多软件之后，之前安装的空间已经不够使用，再重新创建一个虚拟机显然很不符合实际，因此我们可以将现有虚拟机进行扩容</p></blockquote><ol><li><p>右键VMware的windows虚拟机-设置</p></li><li><p>选择硬盘，扩展<img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095051.png"></p></li><li><p>这时会需要两个问题：</p><ol><li><p>快照问题，当点击扩展时会出现快照不能进行扩展</p><ol><li>需要删除所有快照才能使用扩展功能</li><li>删除快照：右键虚拟机-设置-快照-快照管理器-删除</li><li>注意：需要等进度条完成才算删除完毕</li><li>如果删除不完全，在之后第二个问题中会出现问题，后面会说</li></ol></li><li><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095332.png"></p><blockquote><p>解决方案：</p><p>原因：由于创建虚拟机时将虚拟磁盘拆分成了多个文件，如下图所示。我们需要将文件合并成一个大文件，再对大文件进行扩容操作</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095436.png" alt="安装时的选择"></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095522.png" alt="磁盘"></p><p>解决：</p><ol><li><p>首先找到你的虚拟机位置，记住磁盘位置，如<code>G:\system\CentOS 7 64 位\CentOS 7 64 位-000001.vmdk</code></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095825.png"></p></li><li><p>之后新建一个文件夹，可以在虚拟机镜像文件夹中新建（名字随意），并记录新文件夹的位置，如：<code>G:\system\CentOS 7 64 位\new\</code></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422095952.png"></p></li><li><p>找到Vmware虚拟机安装目录，就是虚拟机平台的目录，如：<code>D:\Linux\VMware</code></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422100227.png"></p><p>在目录上输入cmd，打开终端</p></li><li><p>输入命令</p><pre><code>vmware-vdiskmanager.exe -r "你的原虚拟机镜像位置，就是第一个记录的路径" -t 0 "合并后的磁盘文件地址，就是第二次记录的路径+第一次记录路径的文件名"vmware-vdiskmanager.exe -r "G:\system\CentOS 7 64 位\CentOS 7 64 位-000001.vmdk" -t 0 "G:\system\CentOS 7 64 位\new\CentOS 7 64 位-000001.vmdk"     //示例</code></pre></li><li><p>等待片刻，会在新文件夹中整合出一个新的.vmdk文件</p><pre><code>//这是提示的消息vmware-vdiskmanager.exe&nbsp;-r&nbsp;"D:\Program&nbsp;Files&nbsp;(x86)\MAC&nbsp;OS\OS&nbsp;X&nbsp;10.13.vmdk"&nbsp;-t&nbsp;0&nbsp;"D:\Program&nbsp;Files&nbsp;(x86)\MAC&nbsp;OS2\OS&nbsp;X&nbsp;10.13.vmdk"VixDiskLib:&nbsp;Invalid&nbsp;configuration&nbsp;file&nbsp;parameter.&nbsp;Failed&nbsp;to&nbsp;read&nbsp;configuration&nbsp;file.Creating&nbsp;disk&nbsp;'D:\Program&nbsp;Files&nbsp;(x86)\MAC&nbsp;OS2\OS&nbsp;X&nbsp;10.13.vmdk'&nbsp;&nbsp;Convert:&nbsp;100%&nbsp;done.Virtual&nbsp;disk&nbsp;conversion&nbsp;successful.</code></pre><p>这里不一定是100%，有时候90%也是成功的</p><p>注意：一定确保已经创建了新文件夹，并且磁盘空间充足，否则会失败。这里合并之后的文件大小和你原来的虚拟机镜像大小一样，所以要提前保证空间充足</p></li><li><p>完成后，将原虚拟镜像中的配置文件.vmx复制到新文件夹中</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422100906.png"></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422100930.png"></p></li><li><p>在vm虚拟机中，左上角文件-打开，选择新文件夹中的vmx文件，打开合并后的虚拟机，启动</p></li><li><p>发现虚拟机正常运行，关闭虚拟机</p></li><li><p>右键虚拟机-设置-磁盘-扩展（前提保证磁盘空间充足，否则会失败）</p></li><li><p>完成</p><ol><li><p><strong>注意！</strong>：vm扩展的大概原理会先将大文件复制，之后再扩展，也就是说磁盘剩余空间必须要超过当前空间，如：想扩展10个G，系统会先复制28.9G再扩展，也就是总体系统可用空间要超过38.9G。否则会提示文件系统空间不足，无法执行</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422101350.png"></p></li><li><p><strong>注意！</strong>：如果点击扩展，还是提示在部分链……请选择父虚拟磁盘。证明你的快照没有完全删除。</p><ol><li>解决：根据快照删除操作，新建一个快照，再将快照删除掉，等进度条读完，就可以解决问题。</li></ol></li></ol></li></ol></blockquote><p>扩容完之后，虚拟机的磁盘空间并不会增加，需要我们对扩容的空间进行分区操作。</p><p>windows2012R2分区操作如下：</p><ol><li><p>右键我的电脑，管理，工具，计算机管理，磁盘管理</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422102258.png"></p></li><li><p>发现多出来了未分配的分区，我们可以进行分配。</p><ol><li>如果想给先有磁盘，如C盘扩容，右键C盘，扩展卷，按照向导操作</li><li>如果想新建磁盘，如新增D盘，右键未分配的卷，新建卷，按照向导操作</li></ol><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210422102425.png"></p></li></ol></li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装</title>
      <link href="/2021/04/16/linux/linux-xu-ni-ji-an-zhuang/"/>
      <url>/2021/04/16/linux/linux-xu-ni-ji-an-zhuang/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="dcb22d559e6b7d712a5c8a86a773156135fa29479a0558178a8ad6a4018f46d6">50401a1b4252edfef05a7c1120311a28d7c9779e54cbf0d6b9b880a49e65437b34100e8f275b74943600fad424291f6ec2db3d37f2d42db74ad7378d9ff1bdd6c23d5bfb841b1e9c19252dae5a14e6561063afa53a34eb1d9fb989a63cdc704930ffc52d2be5d1c018451ee1443d26c5f4faa2b54069130d419e37bd6a9e02e5f0779d523686c47e7809d7fbb52a3128a56a0f989df59fe650c65737c55e8a6960a44033dddc36e5e8cf3ac064173070793489e6e5b75d688d351f5aa2db5a3d6a33fef54cc74190f24b775b5523eba2448998c87fbe5b9078f4ea68bb6c06b56841ac409813607e862ed23ae246f462ce25d779358e6ef0ce3a355c225c82021c1f9ec2ff0cd45c10961783b34ede3071d9a2595061967fedfdf9c0a679c238b6a2d091ed254acd40f2e083e6d7daa4c2c5a0b1c87478fbedb209a973bdf251f23e8575a13b1df9b43cdb89f1c95b03b8c1d370a79e22f6721664030fa8c449953212cf81fd7e2e42e5834b361356a3c51c8703e7cc935d61de85a5c8a4d613637da3fcad89e26b6dd34f08b70f20322d505f39c43960da6a4520cb36fabc41b1a46ba8b6b58327334c0141d606887fac2ecea96dcd7225417b7e1e74b8d516af54a96d222c654cd48c78ba56884bae1ba12ed44cd2cd615d1e170962a1228350f3ea5a7a73d1edc8dc8229e72541eaba4e17284e2268c358828217222962673cc90bfa6e3e1fdd7900d37a9ec45c138e38072ee0fa29bcfa71d63c685e1f849fe058d25ce46dedb85b7e8a7b97bb70dd54219c107c057f773ef6ce6f9e5307e2d6f1b73339ee398abba288324ba6e6e883364c951d08793a808562a4741ac39ff44d3826701b6695d5feaf18d9e9ed0e97ce8699921e7e0af8734dc6414f778b13a8aff1f868f087538f36d71f0c553d8d1fce561544267216dbc5243ff39a3878c5b2322ade8055c23a10ce7d548a24164f1a3f5b4e3875b45e58af3b06f7dff9327fa7988cc981eada06af4eaa693ae7b04cb6f62edb30faff3d1ba1aa4ac395a36bd52f5119405269462d8973b1b4e073ca58275238d497521ec30289c0690496a1eea6407832929ff8b0424813181c039274faf1bb5e44cebdc2548a7d1b183cf101eeb016b9cd28f35838e5561d0f913b5fbdf9d4331837d92cfb75f237d427f67f118ddf61865dfd9030fd0c397fad03cc04b0dd307c16bdb8332519cf9902eb76fa9d0aca7764adcf2fd91b1db0dd228318c8e1032e1c79c0e26e42ec3a6e2374165aac29360d6d7b9c51043574b355f00aa9dbaf0f2b2d563cbcc36395e4eb087acd193c59c3afb4748765af34de27a0582ee6a5e94600dcd628c41fa076c4542bb740cb00bab6b46b133a1098dc9fd5608eaf2851b6bf864c42ea9dce6af95bfe1761b7dd1a4cfc690180f1d9d364442b1ba0220091ca665c36ed777839d99ac66bfe55708dfc79c68561f27104425d6322ac943439174d271f85132514bc5bdbc3e542dbecb257047ce814da3f9d87d79e584983b642659d473e56a9839db1af93433e09778bca8f1eb4989e48e0dd19d750ab594b86fae66e4c2aac941bbdbf8769d9c3ec7cfb7f81de4ac6d88f0137dd32ff30b67b914c86bd9ca19f3108f7d169e0b374953fbe59c38a72dab5c38305876505c63d53a046c96b637b1e5c2c6bd84527e74bf329d2c4b6602f77d56f2786dcc6d628c9f1045dcd2ae581074632c51ca984b971d89abcc496c972dc9aabbbb8e9c0f928689bc195d6d1bdeb6dcca2ccfb2624389c438e4e6d4723cece5730c74b44acb5d8c8feaaeb4b901a73431cc4039b485d9032c6cb0b7a919505de1bbaa1b69c72b1d4481050b5d17c0cf3cad75429cb7a5e3ba2e4d84fb874e020b1cc7a4ce44702bc829edc8b6a84e3adb35c455bdbebf31895ad2e68f3a1a7c2562d06fe9f0f41f42bfe407c1d9730bbc16ed9f709a5df26cb54bc872e64be78a098b82d5ff83072880ed7872b489175dd48882dd0ad13a8764cc92dd1fa0206b30a7767b92cd33fe953eb8c8fbe6eb4b31fe6edd62547accc236785026bfedb5697f909ed537b684f302da557fb153862e34bc55a99d4c73c38e92b3501f628dec64c84b5848001e72f89a2ac7cbcf1f631a3f41884d758062cd13ae3c0346ee9f5db259bde15cdd676540af2e27b08c45e72069cf3426038bc7b4f205d949be067ab04f58aa6f215be2294fa9cdcfd2fcd5da7179c2d27cb2f0292a39edac556687eb203a47aedcdc2429495b8ca003a67206e93963f501d6baa4292229a602aa768165906834a579e06cb0da55baa157033ebea2b23fe593624869cbb00a4156fa933f094e9720587cdeeb5af45820dfee9d441cd98ad5a6b9d1f2ea9cb917256390cb51215c8c03463da66aa523c97f09511e638c4c46718dedf83367782749862ec6f8a07265bbb58c82bbc64f428de1d658657d27bb9b8414c74a8de67e13a311ee304e49f78eab280b5432427a5c9ae8803b5b2ac026132ad3746f8183d7a7d93a34c2582fbf3ed56b925947b84e036bb6ff18f7d10e9904f79526bc753262d5567eaf607fef6d73b86dc71c496570cfa432af51e9d71fd919489105dd575ab6aefe397415ea7363e49f7ba1b1f8e9bfb28d75805dd8544d5aba4e6d2d2b6fd832f954919f0c1d55e5ab50e744780eb4f145106e660508fcebe85767dcd4c4ed4989d4bb4c72bec8e12714b7d2f26dadb958c140e41</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好，这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 公司 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实施 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle</title>
      <link href="/2021/04/16/mysql/oracle/"/>
      <url>/2021/04/16/mysql/oracle/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h1><h2 id="名词介绍"><a href="#名词介绍" class="headerlink" title="名词介绍"></a>名词介绍</h2><ol><li><p>数据库</p><p>oracle数据的物理存储，包括数据文件、参数文件、日志等</p></li><li><p>实例</p><p>一个oracle实例有一系列的后台进程，一个数据库可以有n个实例。就好比说可以跑多个QQ一样</p></li><li><p>表空间</p><p>是数据文件（ora/dbf）的逻辑映射，也就是多个数据文件组成一个表空间，数据文件是看得见摸得着的文件，表空间是一个逻辑概念。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--创建表空间</span><span class="token keyword">create</span> <span class="token keyword">tablespace</span> 表空间名称 datafile <span class="token string">'c:\app\gen\oradata\myora\xxx.dbf'</span> size 表空间初始大小100mAutoextend <span class="token keyword">on</span><span class="token punctuation">;</span> （自增长）<span class="token comment" spellcheck="true">--查看已经创建好的表空间(创建完用户后才能看到刚才创建好的表空间)</span><span class="token keyword">select</span> default_tablespace<span class="token punctuation">,</span>temporary_tablespace<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>username <span class="token keyword">from</span> dba_users <span class="token number">d</span></code></pre></li><li><p>用户</p><p>用户使操作表的基本单位，相当于mysql中的数据库database。不同实例可以创建多个用户。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--创建用户</span><span class="token keyword">create</span> <span class="token keyword">user</span> 用户名identified <span class="token keyword">by</span> 密码<span class="token keyword">default</span> <span class="token keyword">tablespace</span> 表空间名称<span class="token keyword">temporary</span> <span class="token keyword">tablespace</span> <span class="token keyword">temp</span><span class="token punctuation">;</span></code></pre></li><li><p>权限</p><p>有了用户，要想使用用户账号管理自己的表空间，还需要给它权限</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--给用户授予登录/创建表/管理员的权限</span><span class="token keyword">grant</span> <span class="token keyword">connect</span><span class="token operator">/</span>resource<span class="token operator">/</span><span class="token number">dba</span> <span class="token keyword">to</span> 用户名<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--给用户授予其他用户的表权限</span><span class="token keyword">grant</span> <span class="token keyword">select</span><span class="token operator">/</span><span class="token keyword">delete</span><span class="token operator">/</span><span class="token keyword">update</span><span class="token operator">/</span><span class="token keyword">insert</span> <span class="token keyword">on</span> 其他用户名<span class="token punctuation">.</span>表名 <span class="token keyword">to</span> 用户名<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--取消用户权限</span><span class="token keyword">revoke</span> 权限 <span class="token keyword">from</span> 用户名<span class="token punctuation">;</span></code></pre></li><li><p>数据文件</p><p>数据库的物理存储单位。数据库的数据是存储在表空间中的，真正是在某一个或多个数据文件中。</p></li></ol><p><img src="/2021/04/16/mysql/oracle/Users\44317\AppData\Roaming\Typora\typora-user-images\image-20210516173105991.png" alt="image-20210516173105991"></p><h2 id="windows安装"><a href="#windows安装" class="headerlink" title="windows安装"></a>windows安装</h2><blockquote><p>此处以oracle 11g为例</p></blockquote><ol><li>取消安全更新</li><li>创建和配置数据库</li><li>服务器类</li><li>单实例数据库安装</li><li>高级安装</li><li>简体中文、英语</li><li>企业版</li><li>安装目录</li><li>一般用途/事务处理</li><li>数据库名（一般根据实际用途取名，如ecard）</li><li>内存（根据现场配，默认40%），字符集（默认gbk）</li><li>管理选项（下一步）</li><li>文件系统（根据现场指定数据库存放位置）</li><li>不启动自动备份</li><li>对所用账户使用相同的口令（大小写数字都要有，最少八位）</li><li>保存响应文件（保存设置）</li><li>安装ing</li><li>确定 完成</li></ol><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><ol><li>在oracle服务端登录oracle的方法<a href="https://blog.csdn.net/heshushun/article/details/79773886">https://blog.csdn.net/heshushun/article/details/79773886</a></li></ol><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><ol><li><p><strong>先登录服务器后，切换到oracle用户状态下：</strong> su - oracle</p><ol start="2"><li><strong>检查oracle监听器运行状态：</strong> lsnrctl status命令查看。<ol><li>若没启动，执行启动监听，通过命令： lsnrctl start （lsnrctl stop 关闭监听）</li><li>如果启动报错，listener.ora文件打开，调整HOST IP</li></ol></li><li><strong>进入sqlplus，命令：</strong> sqlplus /nolog</li></ol></li><li><p><strong>管理员</strong> <strong>sysdba</strong> <strong>权限登陆oracle：</strong> conn /as sysdba</p><ol start="5"><li><strong>启动服务（实例）：</strong> startup</li></ol><h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><p><strong>关闭服务（实例）：</strong> shutdown immediate;</p><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><p>SQL&gt; <code>shutdown immediate</code></p><p>SQL&gt; <code>startup open</code></p><h3 id="检验服务是否开启"><a href="#检验服务是否开启" class="headerlink" title="检验服务是否开启"></a>检验服务是否开启</h3><p>看数据库当前状态 </p><p>SQL&gt;<code>select status from v$instance;</code></p><p>如果status = open 就说明oracle服务正常。</p></li><li><p>在oracle客户端登录oracle的方法</p><ol><li><p>原始的登录方法</p><pre><code>sqlplus scott/123@//192.168.94.133/orcl     //192.168.94.133是服务端的IP地址</code></pre></li><li><p>修改配置文件后的登录方法</p><pre><code>sqlplus scott/123@orcl_133</code></pre><p>可以理解为“orcl_133”是“//192.168.94.133/orcl”的别名，这个别名是在客户端软件(sqlplus)的安装目录下配置文件设置的。如E:\app\Administrator\product\11.2.0\client_1\network\admin\tnsnames.ora</p><p>这里以服务端的客户端软件为例，该配置文件为/opt/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora，默认文件内容为：</p><pre><code># tnsnames.ora Network Configuration File: /opt/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora# Generated by Oracle configuration tools.LISTENER_ORCL =  (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))ORCL =  (DESCRIPTION =    (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))    (CONNECT_DATA =      (SERVER = DEDICATED)      (SERVICE_NAME = orcl)    )  )</code></pre></li></ol></li></ol><p>可见在这里的客户端软件，ORCL是被指定为协议为TCP、IP地址为localhost，端口为1521的实例了，所以我们可以用sqlplus scott/123直接登录oracle。</p><p><strong>客户端登录服务端</strong></p><p>所以在只装oracle客户端的机器上，要使用sqlplus scott/123@orcl_133登录远程oracle的服务端，需要在该机器的tnsnames.ora文件增加：</p><pre><code>ortcl_133 =  (DESCRIPTION =    (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.94.133)(PORT = 1521))    (CONNECT_DATA =      (SERVICE_NAME = orcl)    )  )</code></pre><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><ol><li>对缺省密码的有效期进行修改<ol><li>登录数据库<ol><li><code>sqlplus /nolog</code></li><li><code>conn 账号/密码 as sysdba</code>，以管理员权限登录数据库</li></ol></li><li>输入<code>alter profile default limit password_life_time unlimited;</code></li></ol></li><li>对空表不备份进行修改（调整为全量备份）<ol><li>输入<code>alter system set deferred_segment_creation=false;</code></li></ol></li></ol><h2 id="备份与导入"><a href="#备份与导入" class="headerlink" title="备份与导入"></a>备份与导入</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p><a href="https://blog.csdn.net/xuheng8600/article/details/84324707">https://blog.csdn.net/xuheng8600/article/details/84324707</a></p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>创建表空间和用户，以IDC_U_STUWORK为例</p><ol><li><p>oracle命令行登录</p><p><code>sqlplus 用户名/密码</code></p></li><li><p>创建表空间IDC_U_STUWORK，指定存储文件及路径/u01/app/oracle/oradata/orcl/IDC_U_STUWORK.dbf，表空间大小360M</p><p><code>create tablespace IDC_U_STUWORK datafile '/u01/app/oracle/oradata/orcl/IDC_U_STUWORK.dbf' size 360M;</code></p><blockquote><p>扩展：</p><ol><li>删除表空间：<ol><li><code>drop tablespace 表空间名</code></li><li>删除本地文件<code>/u01/app/oracle/oradata/orcl/IDC_U_STUWORK.dbf</code>即可</li></ol></li></ol></blockquote></li><li><p>创建用户并指定默认表空间</p><p><code>create user IDC_U_STUWORK identified by Jiaminjm1 default tablespace IDC_U_STUWORK;</code></p></li><li><p>赋予普通用户权限给用户</p><p><code>grant connect,resource to IDC_U_STUWORK;</code></p><blockquote><p>DBA: 拥有全部特权，是系统最高权限，只有DBA才可以创建数据库结构。<br>RESOURCE:拥有Resource权限的用户只可以创建实体，不可以创建数据库结构。<br>CONNECT:拥有Connect权限的用户只可以登录Oracle，不可以创建实体，不可以创建数据库结构。<br>对于普通用户：授予connect, resource权限。<br>对于DBA管理用户：授予connect，resource, dba权限。</p></blockquote></li><li><p>切换用户</p><p><code>sqlplus IDC_U_STUWORK/Jiaminjm1</code></p></li></ol><p>导入dmp数据</p><ol start="5"><li><p>导入</p><pre><code># 三种方式方式一：1.将oracle_6.0.4.dmp文件上传到/u01/app/oracle/admin/orcl/dpdump/中2.impdp IDC_U_STUWORK/Jiaminjm1@orcl file=oracle_6.0.4.dmp full=y ignore=y remap_schema=bladex_release:IDC_U_STUWORK transform=segment_attributes:n方式二：1.将oracle_6.0.4.dmp文件上传到/opt/dmp中2.修改文件属组： chown -R oracle:oinstall /opt/dmp3.创建文件夹dir：SQL&gt; create directory dir as '/opt/dmp';4.授权用户访问授权：SQL&gt; grant read,write on directory dir to IDC_U_STUWORK;5.impdp idc_u_stuwork/Jiaminjm1@orcl directory=dir dumpfile=oracle_6.0.4.dmp  remap_schema=bladex_release:IDC_U_STUWORK transform=segment_attributes:n</code></pre><blockquote><p>问题：ORA-39088: file name cannot contain a path specification</p><p>解决：方式一的错误，log文件名不能包含路径，直接修改成为文件名即可</p></blockquote><blockquote><p>问题：ORA-39145: directory object parameter must be specified and non-null</p><p>解决：方式一的错误，权限问题，给予用户最高权限<code>grant dba to 用户名</code></p></blockquote><blockquote><p>问题：导入时，出现大量ORA-39112: dependent object type comment skipped</p><p>解决：方式一的错误，没有指定用户转移，语句中增加参数<code>remap_schema=bladex_release:IDC_U_STUWORK transform=segment_attributes:n</code></p><blockquote><p>扩展：</p><p>remap_schema=bladex_release:IDC_U_STUWORK    原来的schema:现在的schema<br>transform=segment_attributes:n 去掉表空间和存储子句</p></blockquote></blockquote></li></ol><h2 id="表空间、用户、权限"><a href="#表空间、用户、权限" class="headerlink" title="表空间、用户、权限"></a>表空间、用户、权限</h2><p><a href="https://blog.csdn.net/wang_chaodong/article/details/116243090">https://blog.csdn.net/wang_chaodong/article/details/116243090</a></p><pre><code>使用sys账号进行操作# 查看哪些用户拥有dba权限select * from dba_role_privs where granted_role='DBA';# 去掉权限revoke dba from 用户名;# 修改密码alter user 用户（sys） identified by 密码;# 授权grant connect, resource to 用户名;</code></pre><h2 id="创建用户视图"><a href="#创建用户视图" class="headerlink" title="创建用户视图"></a>创建用户视图</h2><blockquote><p>向第三方提供视图，需要建个新用户（用户名2），并且只授权这一个视图的查询权限</p></blockquote><ol><li><p>创建用户</p><pre class=" language-mysql"><code class="language-mysql">create user 用户名2 identified by 密码 default tablespace tbs1 temporary tablespace tbs1_temp profile DEFAULT;</code></pre></li><li><p>授权（使用sys/system用户）</p><pre><code>grant connect,resource to 用户名2;--这两个是普通用户必须要的两个权限grant CREATE SYNONYM to 用户名2;--这个为了之后查询时方便，创建同义词权限grant select on 用户名1.视图名 to 用户名2;--授权一张表/视图的查询权限</code></pre></li><li><p>创建同义词（使用用户名2）</p><pre><code>create synonym 视图名 for 用户名1.视图名;</code></pre></li><li><p>查询即可</p></li></ol><h2 id="连接数查询"><a href="#连接数查询" class="headerlink" title="连接数查询"></a>连接数查询</h2><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--查看当前连接数</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> v$<span class="token keyword">session</span><span class="token comment" spellcheck="true">--查看最大连接数</span><span class="token keyword">select</span> <span class="token keyword">value</span> <span class="token keyword">from</span> v$parameter <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">'processes'</span> </code></pre><blockquote><p>查看连接数是否占满，对比上面两个查出来的数即可</p></blockquote><ol><li><p>plsql，sqlplus连接oracle非常慢，偶尔能连接上</p><p>原因是监听日志过大,4G封顶，一般windows装的oracle会出现此情况</p><p>解决：\app\Administrator\diag\tnslsnr\LS–20171012URU\listener\trace\listener.log，找到该路径，备份到其他地方后删除掉（需要先关闭监听服务TNSListner）。</p></li><li><p>Oracle密码过期, 报：ORA-01017: 用户名/口令无效; 登录被拒绝…</p><ol><li><p>通过sys进入管理员</p></li><li><p>查询密码有效期时间</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> dba_profiles <span class="token keyword">where</span> profile<span class="token operator">=</span><span class="token string">'DEFAULT'</span> <span class="token operator">and</span> resource_name<span class="token operator">=</span><span class="token string">'PASSWORD_LIFE_TIME'</span><span class="token punctuation">;</span>默认是<span class="token number">180</span>天，改成无限制<span class="token keyword">alter</span> profile <span class="token keyword">default</span> <span class="token keyword">limit</span> password_life_time unlimited<span class="token punctuation">;</span>再查询一下，注意事务</code></pre></li><li><p>修改新密码，不修改的话密码仍然是失效的</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">user</span> 数据库用户名 identified <span class="token keyword">by</span> 数据库新密码<span class="token punctuation">;</span></code></pre></li></ol></li><li><p>Oracle把一个表的数据复制到另一个表中</p><pre class=" language-sql"><code class="language-sql"><span class="token number">1</span>、新增一个表，通过另一个表的结构和数据：  <span class="token keyword">create</span> <span class="token keyword">table</span> tab2 <span class="token keyword">as</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1<span class="token punctuation">;</span><span class="token number">2</span>、如果表存在：  <span class="token keyword">insert</span> <span class="token keyword">into</span> tab2 <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1<span class="token punctuation">;</span><span class="token number">3</span>、同一个表中，将A字段的值赋给B字段：  <span class="token keyword">update</span> table_name <span class="token keyword">set</span> B <span class="token operator">=</span> A<span class="token punctuation">;</span><span class="token number">4</span>、将一个表的字段数据插入到另一个表的字段数据中  <span class="token keyword">insert</span> <span class="token keyword">into</span> tab2      <span class="token punctuation">(</span>t_code<span class="token punctuation">,</span> t_name<span class="token punctuation">)</span>       <span class="token keyword">select</span> pk_code<span class="token punctuation">,</span> pk_name <span class="token keyword">from</span> tab1<span class="token punctuation">;</span>  <span class="token operator">*</span> 如果报提醒：ORA<span class="token number">-00928</span>: 缺失 <span class="token keyword">select</span> 关键字错误。  原因是：这里tab1<span class="token punctuation">(</span>Field1<span class="token punctuation">,</span>Field2<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>不能加单引号<span class="token number">5</span><span class="token punctuation">.</span> 多个表的多个字段，插入同一个表的多个字段。  <span class="token keyword">insert</span> <span class="token keyword">into</span> tab1        <span class="token punctuation">(</span>tab_id<span class="token punctuation">,</span> tab2_name<span class="token punctuation">,</span> tab_code<span class="token punctuation">)</span>         <span class="token keyword">select</span> <span class="token number">a</span><span class="token punctuation">.</span>pk_id<span class="token punctuation">,</span> <span class="token number">b</span><span class="token punctuation">.</span>pk_name<span class="token punctuation">,</span> <span class="token number">b</span><span class="token punctuation">.</span>pk_code          <span class="token keyword">from</span> tab1 <span class="token number">a</span><span class="token punctuation">,</span> tab2 <span class="token number">b</span>          <span class="token keyword">where</span> <span class="token number">a</span><span class="token punctuation">.</span>pk_id <span class="token operator">=</span> <span class="token string">'7777'</span>          <span class="token operator">and</span> <span class="token number">b</span><span class="token punctuation">.</span>pk_code <span class="token operator">=</span> <span class="token string">'12'</span><span class="token punctuation">;</span></code></pre></li><li><p><strong>表空间占满</strong>，将102.57的超过90%的扩容</p><ol><li><p>进入102.57中的xydb、orcl实例，sys用户</p></li><li><p>查看表空间占用率</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span><span class="token function">mAX</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span>file_id<span class="token punctuation">)</span> id<span class="token punctuation">,</span>B<span class="token punctuation">.</span>TABLESPACE_NAME 表空间<span class="token punctuation">,</span>B<span class="token punctuation">.</span>FILE_NAME 物理文件名<span class="token punctuation">,</span>B<span class="token punctuation">.</span>BYTES <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> 大小M<span class="token punctuation">,</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span>BYTES <span class="token operator">-</span> <span class="token function">SUM</span><span class="token punctuation">(</span>NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>BYTES<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> 已使用M<span class="token punctuation">,</span>SUBSTR<span class="token punctuation">(</span><span class="token punctuation">(</span>B<span class="token punctuation">.</span>BYTES <span class="token operator">-</span> <span class="token function">SUM</span><span class="token punctuation">(</span>NVL<span class="token punctuation">(</span>A<span class="token punctuation">.</span>BYTES<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>B<span class="token punctuation">.</span>BYTES<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> 利用率<span class="token keyword">FROM</span> DBA_FREE_SPACE A<span class="token punctuation">,</span> DBA_DATA_FILES B<span class="token keyword">WHERE</span> A<span class="token punctuation">.</span>FILE_ID <span class="token operator">=</span> B<span class="token punctuation">.</span>FILE_ID<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> B<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">,</span> B<span class="token punctuation">.</span>FILE_NAME<span class="token punctuation">,</span> B<span class="token punctuation">.</span>BYTES<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> B<span class="token punctuation">.</span>TABLESPACE_NAME<span class="token punctuation">;</span></code></pre></li><li><p>扩容</p><ol><li><p>方法一（将原物理文件扩展）：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--物理文件不能超过32G</span><span class="token keyword">alter</span> <span class="token keyword">database</span> datafile <span class="token string">'表空间位置'</span> resize 新的尺寸例如：<span class="token keyword">alter</span> <span class="token keyword">database</span> datafile <span class="token string">'/ora_data/icsdb/system01.dbf'</span> resize 500M<span class="token punctuation">;</span></code></pre></li><li><p>方法二（增加物理文件个数）：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">tablespace</span> 表空间名称 <span class="token keyword">add</span> datafile <span class="token string">'新的数据文件地址'</span> size 数据文件大小例如：<span class="token keyword">alter</span>  <span class="token keyword">tablespace</span> system <span class="token keyword">add</span> datafile <span class="token string">'/ora_data/icsdb/system02.dbf'</span> size 1G；</code></pre></li><li><p>方法三（设置表空间自动扩展）：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">database</span> datafile <span class="token string">'数据文件位置'</span> autoextend <span class="token keyword">on</span> <span class="token keyword">next</span> 自动扩展大小 maxsize 最大扩展大小例如：<span class="token keyword">alter</span> <span class="token keyword">database</span> datafile <span class="token string">'/ora_data/icsdb/system02.dbf'</span> autoextend <span class="token keyword">on</span> <span class="token keyword">next</span> 500m maxsize 10000m；</code></pre><blockquote><p>扩展：</p><p>创建表空间</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">tablespace</span> 表空间名称 datafile <span class="token string">'c:\app\gen\oradata\myora\xxx.dbf'</span> size 表空间初始大小100mautoextend <span class="token keyword">on</span> <span class="token keyword">next</span> 1024m maxsize 20480m<span class="token punctuation">;</span></code></pre></blockquote></li></ol></li></ol></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode使用sftp快速同步服务器文件</title>
      <link href="/2021/03/12/util/vscode-shi-yong-sftp-kuai-su-tong-bu-fu-wu-qi-wen-jian/"/>
      <url>/2021/03/12/util/vscode-shi-yong-sftp-kuai-su-tong-bu-fu-wu-qi-wen-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="VScode使用sftp快速同步服务器文件"><a href="#VScode使用sftp快速同步服务器文件" class="headerlink" title="VScode使用sftp快速同步服务器文件"></a>VScode使用sftp快速同步服务器文件</h1><blockquote><p>写这一片文章的目的，是在学习Nginx时需要在Linux上修改配置文件，但使用vim命令多次修改会比较繁琐。有没有一种方式可以像SecureCRT远程操控Linux命令行一样，操作服务器上的配置文件呢？答案是有的，VScode是一个十分强大的编辑器，可以集成很多插件。sftp这个插件就可以满足这一点。</p></blockquote><h2 id="VScode设置中文模式"><a href="#VScode设置中文模式" class="headerlink" title="VScode设置中文模式"></a>VScode设置中文模式</h2><blockquote><p>由于我的VScode还是英文版，在操作前打算把它设置成中文版，插件也可以满足这一需求。</p></blockquote><ol><li><p>打开vscode,界面如下</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312203735.png"></p></li><li><p>安装插件的方法：</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312203805.png"></p><p>输入Chinese，选择第一个插件，进行安装</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312204049.png"></p><p>安装完成后，点击按钮进行重启软件</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312204125.png"></p><p>完成，界面已经变成中文</p></li></ol><h2 id="使用sftp快速同步服务器文件"><a href="#使用sftp快速同步服务器文件" class="headerlink" title="使用sftp快速同步服务器文件"></a>使用sftp快速同步服务器文件</h2><ol><li><p>安装sftp插件</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312203931.png"></p></li><li><p>添加一个本地文件夹到工作区(准备同步到服务器上的)</p><p>我这里选择了桌面</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312204410.png"></p></li><li><p>进行配置</p><ol><li><p>按F1或者ctrl+shift+p调出搜索栏, 输入”sftp”, 选择SFTP:Config</p><blockquote><p>如果点击出现expect to open……，文件并没有打开，证明没有完成第二步，需要打开一个本地文件夹到工作区，就可以打开</p></blockquote></li></ol><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312210026.png"></p><ol start="2"><li>具体配置</li></ol><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312210415.png"></p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"My Server"</span><span class="token punctuation">,</span>    <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"xxx.xxx.xxx.xxx"</span><span class="token punctuation">,</span>    <span class="token property">"protocol"</span><span class="token operator">:</span> <span class="token string">"sftp"</span><span class="token punctuation">,</span>    <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>    <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>    <span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"你的密码"</span><span class="token punctuation">,</span>    <span class="token property">"remotePath"</span><span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>    <span class="token property">"uploadOnSave"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"connectTimeout"</span><span class="token operator">:</span> <span class="token number">40000</span><span class="token punctuation">}</span></code></pre><p>保存文件之后就会自动连接，等待一段时间如果右下角出现连接超时timeout，需要加上<code>"connectTimeout": 40000</code>，默认为10000</p><blockquote><p>有可能还需要将远程端关闭防火墙。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312210744.png"></p><p>图中最下面的按钮，就是远程端的界面，连接成功之后就可以看到远程目录。</p></li><li><p>使用</p><p>在远程目录中找到要修改的配置文件，进行修改之后保存就可以自动同步到远程端。</p></li></ol><h2 id="VScode打开命令行"><a href="#VScode打开命令行" class="headerlink" title="VScode打开命令行"></a>VScode打开命令行</h2><blockquote><p>hexo博客部署经常会使用到gitbash命令行，在我们修改好配置文件后，再打开gitbash很麻烦，其实vscode就可以启动命令行，在一个窗口中就可以实现修改配置文件和执行命令</p></blockquote><ol><li><p>打开左侧资源管理器，打开目录（这时我们就可以在左侧看到博客的目录，方便随时选择和修改配置文件）</p></li><li><p>点击上方终端-&gt;新建终端。（会以刚才打开的目录为路径打开一个powershell窗口）</p></li><li><p>执行hexo cl，hexo g，hexo d</p><blockquote><p>问题：hexo : 无法加载文件 C:\Users\username\AppData\Roaming\npm\hexo.ps1`</p><p>原因：出现hexo命令无法在powershell窗口中执行</p><p>解决：</p><ol><li><p>win+q打开搜索，搜索powershell，点击以管理员身份运行</p></li><li><p>输入</p><pre><code>Set-ExecutionPolicy -ExecutionPolicy UNRESTRICTED</code></pre><p>会有一串安全警示，输入 <code>y</code> 回车，然后就可以愉快地在 PowerShell 中使用 <code>hexo</code> 了。</p></li></ol></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VScode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx</title>
      <link href="/2021/03/07/util/nginx/"/>
      <url>/2021/03/07/util/nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p>是一款高性能的反向代理服务器，可以实现反向代理、负载均衡、动静分离等功能</p><h2 id="Nginx在Linux下的安装"><a href="#Nginx在Linux下的安装" class="headerlink" title="Nginx在Linux下的安装"></a>Nginx在Linux下的安装</h2><ol><li><p>需要安装 gcc 的环境</p><p><code>yum install gcc-c++</code></p></li><li><p>第三方的开发包</p><p><code>yum install -y pcre pcre-devel</code></p><p><code>yum install -y zlib zlib-devel</code></p><p><code>yum install -y openssl openssl-devel</code></p></li><li><p>上传Nginx文件</p></li><li><p>解压缩</p><p><code>tar -zxvf nginx-1.8.0.tar.gz</code></p><p>进入nginx-1.8.0目录  使用 configure 命令创建一 makeFile 文件。</p><pre><code>./configure \--prefix=/usr/local/nginx \--pid-path=/var/run/nginx/nginx.pid \--lock-path=/var/lock/nginx.lock \--error-log-path=/var/log/nginx/error.log \--http-log-path=/var/log/nginx/access.log \--with-http_gzip_static_module \--http-client-body-temp-path=/var/temp/nginx/client \--http-proxy-temp-path=/var/temp/nginx/proxy \--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \--http-scgi-temp-path=/var/temp/nginx/scgi</code></pre><p>执行后可以看到Makefile文件</p></li><li><p>编译</p><p><code>make</code></p></li><li><p>安装</p><p><code>make install</code></p><p>注意：启动nginx 之前，上边将临时文件目录指定为/var/temp/nginx/client， 需要在/var 下创建此 目录</p><p><code>mkdir /var/temp/nginx/client -p</code></p></li><li><p><strong>启动</strong></p><p><code>cd /usr/local/nginx/sbin</code></p><p><code>./nginx</code></p><p><strong>查看进程</strong></p><p><code>ps aux|grep nginx</code></p></li><li><p>访问</p><p>默认为80端口，可以直接Localhost访问</p><p>地址栏输入虚拟机的IP即可访问（默认为80端口）</p><p><code>192.168.176.128</code></p><blockquote><p>如果没有访问成功，有可能是因为防火墙没有关闭</p><p>centos7关闭防火墙：<code>systemctl stop firewalld</code></p><p>如果不想关闭防火墙，可以设置开放端口</p><p><code>firewall-cmd --add-port=8080/tcp --permanent</code></p><p>重启防火墙：<code>firewall-cmd -reload</code></p><p>查看开放的端口号：<code>firewall-cmd --list-all</code></p></blockquote><p><strong>关闭：</strong></p><p>​    方式一（杀进程）：<code>./nginx -s stop</code></p><p>​    方式二（退出）：<code>./nginx -s quit</code></p><p><strong>重启：</strong></p><p>​    <code>./nginx -s reload</code></p><p><strong>查看版本</strong></p><p>​    <code>./nginx -v</code></p></li></ol><h2 id="Nginx配置文件"><a href="#Nginx配置文件" class="headerlink" title="Nginx配置文件"></a>Nginx配置文件</h2><p>位置：<code>/usr/local/nginx/conf/nginx.conf</code></p><p>配置文件有三部分组成</p><ol><li><p>全局块</p><p>从配置文件开始到events间的区域</p><p>作用：主要设置一些影响nginx服务器整体运行的配置指令</p><p><code>worker_processes</code>：处理并发量的值，值越大处理并发量越多</p></li><li><p>events块</p><p>作用：影响Nginx服务器与用户网络连接</p><p><code>worker_connections</code>：支持最大的连接数</p></li><li><p><strong>http块</strong></p><p>配置最频繁的部分</p><p>包括http全局块、sever块</p></li></ol><h2 id="部署静态页面"><a href="#部署静态页面" class="headerlink" title="部署静态页面"></a>部署静态页面</h2><p>作用：在nginx服务器中访问静态页面</p><ol><li><p>将静态页面上传到nginx目录中</p></li><li><p>修改配置文件（conf/nginx.conf）</p><pre><code>        location / {            root   index;            index  index.html index.htm;        }# root代表文件夹，index代表首页#将root 改为index（自己的静态页面文件夹）</code></pre></li></ol><blockquote><p>修改配置文件的方法：</p><p>由于在linux上大量修改配置文件使用vim命令会很繁琐，这里推荐一种vscode远程修改上传配置文件的方法。</p><p><a href="https://sulog.top/2021/03/12/util/vscode-shi-yong-sftp-kuai-su-tong-bu-fu-wu-qi-wen-jian/">VScode使用sftp快速同步服务器文件</a></p></blockquote><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><h3 id="端口绑定"><a href="#端口绑定" class="headerlink" title="端口绑定"></a>端口绑定</h3><p>作用：输入不同端口号就可以进入不同页面</p><ol><li><p>修改nginx配置文件</p><pre class=" language-json"><code class="language-json">server <span class="token punctuation">{</span>    listen       <span class="token number">81</span><span class="token punctuation">;</span> #端口号    server_name  localhost<span class="token punctuation">;</span> #域名或者Ip    location / <span class="token punctuation">{</span> #访问路径配置        root   index<span class="token punctuation">;</span> #目录        index  index.html index.htm<span class="token punctuation">;</span> #默认首页    <span class="token punctuation">}</span>    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span> #错误页面        location = /50x.html <span class="token punctuation">{</span>        root   html<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>#复制两份server，就可以有两台虚拟主机server <span class="token punctuation">{</span>    listen       <span class="token number">82</span><span class="token punctuation">;</span> #端口号    server_name  localhost<span class="token punctuation">;</span> #域名或者Ip    location / <span class="token punctuation">{</span> #访问路径配置        root   regist<span class="token punctuation">;</span> #目录        index  regist.html regist.htm<span class="token punctuation">;</span> #默认首页    <span class="token punctuation">}</span>    error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span> #错误页面        location = /50x.html <span class="token punctuation">{</span>        root   html<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>重启nginx</p><p><code>./nginx -s reload</code></p></li><li><p>访问页面</p><p><code>192.168.179.128:81</code>    来到主页</p><p><code>192.168.179.128:82</code>    来到注册页面</p></li></ol><h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><p>作用：输入域名就可以进入页面</p><p>一个域名对应一个 ip 地址，一个 ip 地址可以被多个域名绑定。</p><ol><li><p>本地测试可以修改 hosts 文件（C:\Windows\System32\drivers\etc\host）</p><p><code>192.168.177.129   www.hmtravel.com</code></p><p><code>192.168.177.129   regist.hmtravel.com</code></p></li><li><p>修改nginx配置文件</p><pre class=" language-json"><code class="language-json">    server <span class="token punctuation">{</span>        listen       <span class="token number">80</span><span class="token punctuation">;</span> #这里全配置成<span class="token number">80</span>        server_name  regist.hmtravel.com<span class="token punctuation">;</span> #修改此处        location / <span class="token punctuation">{</span>            root   regist<span class="token punctuation">;</span>            index  regist.html regist.htm<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    server <span class="token punctuation">{</span>        listen        <span class="token number">80</span><span class="token punctuation">;</span> #这里全配置成<span class="token number">80</span>        server_name  www.hmtravel.com<span class="token punctuation">;</span> #修改此处        location / <span class="token punctuation">{</span>            root   index<span class="token punctuation">;</span>            index  index.html index.htm<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre></li><li><p>重启nginx</p><p><code>./nginx -s reload</code></p></li><li><p>访问页面</p><p><code>www.hmtravel.com</code></p><p><code>regist.hmtravel.com</code></p></li></ol><h2 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h2><p>作用：网络和服务器之间加上nginx</p><blockquote><p>反向代理是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器</p><p>正向代理是针对你的客户端，而反向代理是针对服务器的</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312160914.png" alt="正向代理"></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312160949.png" alt="反向代理"></p><p>反向代理的好处：</p><ol><li>当服务器并发量变大时，搭建服务器集群，反向代理能将大并发量转移到反向代理服务器上，再由自己按照一定规则将请求发送给服务器</li><li>反向代理接收所有请求，反向代理服务器和服务器集群之间可以建立防火墙，从而提高安全性</li></ol></blockquote><h3 id="应用一"><a href="#应用一" class="headerlink" title="应用一"></a>应用一</h3><p>效果：访问<a href="http://www.hmtravel.com或192.168.179.128:80，实际访问的是tomcat页面">www.hmtravel.com或192.168.179.128:80，实际访问的是tomcat页面</a></p><ol><li><p>修改nginx配置文件</p><pre class=" language-json"><code class="language-json">upstream tomcat-travel<span class="token punctuation">{</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span><span class="token punctuation">}</span>server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  www.hmtravel.com<span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>    #root index<span class="token punctuation">;</span> #注释掉    proxy_pass http<span class="token operator">:</span>//tomcat-travel<span class="token punctuation">;</span> #代理上面的ip    index  index.html index.htm<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>重启nginx</p><p><code>./nginx -s reload</code></p></li><li><p>访问页面</p><p>输入<code>www.hmtravel.com</code>，效果看到tomcat页面</p><p>流程：访问域名<a href="http://www.hmtravel.com,找到/">www.hmtravel.com，找到</a> proxy_pass代理tomcat-travel，tomcat-travel对应的服务器是192.168.179.128:8080，返回tomcat页面</p></li></ol><div class="tip error "> 遇到的坑1.没有跳转到tomcat页面，仍然跳转的是travel页面。    解决：查看配置文件，root有没有注释掉</div><h3 id="应用二"><a href="#应用二" class="headerlink" title="应用二"></a>应用二</h3><p>效果：访问192.168.179.128:9001/edu/index.html和192.168.179.128:9001/dev/index.html访问的是不同的两个页面</p><ol><li><p>修改nginx配置文件</p><pre class=" language-json"><code class="language-json">server <span class="token punctuation">{</span>    listen       <span class="token number">9001</span><span class="token punctuation">;</span>#此处修改    server_name  <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token punctuation">;</span> #此处修改    location ~ /edu/ <span class="token punctuation">{</span> # ~是正则表达式的意思，包含edu就跳转指定页面    proxy_pass http<span class="token operator">:</span>//<span class="token number">127.0</span>.<span class="token number">0.1</span><span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span> 跳转到指定tomcat<span class="token punctuation">}</span>    location ~ /dev/ <span class="token punctuation">{</span> # ~是正则表达式的意思，包含edu就跳转指定页面    proxy_pass http<span class="token operator">:</span>//<span class="token number">127.0</span>.<span class="token number">0.1</span><span class="token operator">:</span><span class="token number">8081</span><span class="token punctuation">;</span> 跳转到指定tomcat<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p>location 后可以跟几种形式</p><ol><li><p>= 表示uri必须和后面的保持一直才能访问，如： = /edu/a.html，则访问时必须是192.168.179.128:9001/edu/a.html</p></li><li><p>~ 表示正则表达式，包含即可，如：~ /edu/，则访问时</p><p>192.168.179.128:9001/edu/a.html,192.168.179.128:9001/edu/b.html均可访问</p></li><li><p><del>* 表示不区分大小写的正则表达式，如：</del>* /edu/，则访问192.168.179.128:9001/EDU/a.html,192.168.179.128:9001/edu/b.html均可访问</p></li></ol></blockquote></li><li><p>重启nginx</p><p><code>./nginx -s reload</code></p></li><li><p>访问页面</p><p>192.168.179.128:9001/edu/index.html</p><p>192.168.179.128:9001/dev/index.html</p></li></ol><h2 id="Nginx负载均衡"><a href="#Nginx负载均衡" class="headerlink" title="Nginx负载均衡"></a>Nginx负载均衡</h2><blockquote><p>负载均衡，其意思就是分摊到多个操作单元上进行执行</p></blockquote><h3 id="配置负载均衡-准备工作"><a href="#配置负载均衡-准备工作" class="headerlink" title="配置负载均衡-准备工作"></a>配置负载均衡-准备工作</h3><ol><li>将刚才的存放工程的tomcat复制三份，修改端口分别为8080 ，8081，8082</li><li>分别启动这三个tomcat服务</li><li>为了能够区分是访问哪个服务器的网站，可以在首页标题加上标记以便区分</li></ol><h3 id="配置负载均衡"><a href="#配置负载均衡" class="headerlink" title="配置负载均衡"></a>配置负载均衡</h3><p>效果：访问192.168.179.128:80，访问到8080,8081,8082的tomcat</p><ol><li><p>修改 Nginx配置文件</p><pre class=" language-json"><code class="language-json">#放在http块中 upstream tomcat-travel<span class="token punctuation">{</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8081</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8082</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>修改server</p><pre class=" language-json"><code class="language-json">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  <span class="token number">192.169</span>.<span class="token number">179.128</span><span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>    proxy_pass http<span class="token operator">:</span>//tomcat-travel<span class="token punctuation">;</span> #代理上面的ip    index  index.html index.htm<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>输入网址进行测试</p><p>观察标题，看看是否不同，经测试每台服务器出现的概率为33.3%</p></li><li><p>修改权重</p><p>想要让某台服务器分担更多的压力，可以分配其权重，默认为1</p><pre class=" language-json"><code class="language-json">upstream tomcat-travel<span class="token punctuation">{</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8080</span> weight=<span class="token number">2</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8081</span><span class="token punctuation">;</span>    server <span class="token number">192.168</span>.<span class="token number">179.128</span><span class="token operator">:</span><span class="token number">8082</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20210312174556.png"></p></li></ol><h3 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h3><ol><li>轮询：平均按顺序访问，当一个服务器down掉就会自动剔除</li><li>权重：在ip后设置权重<code>weight = 2</code>，按照权重比例进行访问</li><li>ip hash：在upstream块中加上ip_hash 即可。根据访问用户的Ip计算哈希值，则该用户永远访问的就是该服务器，可以有效解决session问题。</li><li>fair：在upsteam块中加上fair即可。根据用户访问服务器的响应时间，哪个服务器响应时间短就访问哪个服务器。</li></ol><h2 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h2><p>简单来说就是把动态请求和静态请求分开，nginx处理静态页面。</p><p>效果：访问192.168.179.128:80/image/1.jpg，访问的就是静态资源服务器中的数据。访问192.168.179.128:80……其他的页面，是正常反向代理访问的动态数据</p><ol><li><p>准备工作</p><p>将静态文件放到Linux服务器中，如/data/image/1.jpg</p></li><li><p>配置nginx服务器</p><pre class=" language-json"><code class="language-json">#静态资源服务器server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  <span class="token number">192.169</span>.<span class="token number">179.128</span><span class="token punctuation">;</span>    location /image/ <span class="token punctuation">{</span>    root /data/    #index  index.html index.htm<span class="token punctuation">;</span>    #autoindex on<span class="token punctuation">;</span> #页面显示目录列表<span class="token punctuation">}</span>#动态资源服务器（正常的反向代理）server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  <span class="token number">192.169</span>.<span class="token number">179.128</span><span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>    proxy_pass http<span class="token operator">:</span>//<span class="token number">127.0</span>.<span class="token number">0.1</span><span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span>    index  index.html index.htm<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> util </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot自定义拦截器和全局异常处理器</title>
      <link href="/2020/12/07/springboot/springboot-zi-ding-yi-lan-jie-qi-he-quan-ju-yi-chang-chu-li-qi/"/>
      <url>/2020/12/07/springboot/springboot-zi-ding-yi-lan-jie-qi-he-quan-ju-yi-chang-chu-li-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot自定义拦截器和全局异常处理器"><a href="#springboot自定义拦截器和全局异常处理器" class="headerlink" title="springboot自定义拦截器和全局异常处理器"></a>springboot自定义拦截器和全局异常处理器</h1><p><strong>一、自定义拦截器</strong></p><ol start="2"><li>创建web的全局配置类<ol><li>@Configuration</li><li>继承WebMvcConfigurerAdapter</li></ol></li><li></li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token comment" spellcheck="true">//声明这是一个配置</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyInterceptor</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurerAdapter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span>InterceptorRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HandlerInterceptor inter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest arg0<span class="token punctuation">,</span> HttpServletResponse arg1<span class="token punctuation">,</span> Object arg2<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"自定义拦截器......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span>HttpServletRequest arg0<span class="token punctuation">,</span> HttpServletResponse arg1<span class="token punctuation">,</span> Object arg2<span class="token punctuation">,</span> ModelAndView arg3<span class="token punctuation">)</span>                <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>            <span class="token punctuation">}</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span>HttpServletRequest arg0<span class="token punctuation">,</span> HttpServletResponse arg1<span class="token punctuation">,</span> Object arg2<span class="token punctuation">,</span> Exception arg3<span class="token punctuation">)</span>                <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// TODO Auto-generated method stub</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>inter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span><span class="token string">"/**"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong>二、全局异常处理器</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//全局异常处理器</span><span class="token annotation punctuation">@ControllerAdvice</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span>Exception<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@ResponseBody</span>    <span class="token keyword">public</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> <span class="token function">handleException</span><span class="token punctuation">(</span>Exception exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"errorCode"</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"errorMsg"</span><span class="token punctuation">,</span> exception<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中获取request对象的几种方法</title>
      <link href="/2020/12/06/ssm-kuang-jia/java-zhong-huo-qu-request-dui-xiang-de-ji-chong-fang-fa/"/>
      <url>/2020/12/06/ssm-kuang-jia/java-zhong-huo-qu-request-dui-xiang-de-ji-chong-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Java中获取request对象的几种方法"><a href="#Java中获取request对象的几种方法" class="headerlink" title="Java中获取request对象的几种方法"></a>Java中获取request对象的几种方法</h1><p>1.通过注解获取（很简单，推荐）：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>     HttpServletRequest request<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里可以获取到request</span><span class="token punctuation">}</span></code></pre><p>2.在web.xml中配置一个监听：</p><blockquote><p>spring boot中不需要配置监听，直接使用第二步获得获取即可，还可以获取response</p></blockquote><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>         org.springframework.web.context.request.RequestContextListener     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span></code></pre><p>java代码：（spring自带的，在实际中用到过这个，推荐使用）</p><pre class=" language-java"><code class="language-java">HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span>RequestContextHolder<span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>3.直接在参数中传递（此方法不好用，不建议使用）：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> String <span class="token function">hello</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">)</span></code></pre><p>4.如果有Struts：</p><pre class=" language-java"><code class="language-java">HttpServletRequest request <span class="token operator">=</span> ServletActionContext<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ssm框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在SpringBoot中用SpringAOP实现日志记录功能</title>
      <link href="/2020/12/05/springboot/zai-springboot-zhong-yong-springaop-shi-xian-ri-zhi-ji-lu-gong-neng/"/>
      <url>/2020/12/05/springboot/zai-springboot-zhong-yong-springaop-shi-xian-ri-zhi-ji-lu-gong-neng/</url>
      
        <content type="html"><![CDATA[<h1 id="在SpringBoot中用SpringAOP实现日志记录功能"><a href="#在SpringBoot中用SpringAOP实现日志记录功能" class="headerlink" title="在SpringBoot中用SpringAOP实现日志记录功能"></a>在SpringBoot中用SpringAOP实现日志记录功能</h1><h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>我需要在一个SpringBoot的项目中的每个controller加入一个日志记录，记录关于请求的一些信息。</p><p>代码类似于:</p><p>　　<code>logger.info(request.getRequestUrl());</code></p><p>之类的。</p><p>代码不难，但由于Controller的数量不少，干起来也是体力活。所以想到了用Spring AOP来解决这个问题。</p><p><strong>首先，在pom中加入SpringAOP的相关依赖：</strong></p><pre><code>&lt;dependency&gt;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;        &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><p>spring中实现aop，需要@Aspect注解，要在spring的配置文件中加入</p><p>&lt;aop:aspectj-autoproxy /&gt;或者纯注解方式EnableAspectJAutoProxy</p><p>那么我们这里要不要在程序的主类中增加@EnableAspectJAutoProxy来启用呢？   实际并<strong>不需要</strong>，可以看下面关于AOP的默认配置属性，其中spring.aop.auto属性默认是开启的，也就是说只要引入了AOP依赖后，默认已经增加了@EnableAspectJAutoProxy。</p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201208002944.png"></p><p>好的也就是说，只要引入SpringAOP相关的jar包依赖，我们就可以开始相关的Aspet的编程了。</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Aspect</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebLogAspect</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> <span class="token keyword">final</span> Logger logger <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>WebLogAspect<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(public * com.stuPayment.controller..*.*(..))"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//切入点描述 这个是controller包的切入点</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">controllerLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//签名，可以理解成这个切入点的一个名称</span>        <span class="token annotation punctuation">@Pointcut</span><span class="token punctuation">(</span><span class="token string">"execution(public * com.stuPayment.uiController..*.*(..))"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//切入点描述，这个是uiController包的切入点</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uiControllerLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>        <span class="token annotation punctuation">@Before</span><span class="token punctuation">(</span><span class="token string">"controllerLog() || uiControllerLog()"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//在切入点的方法run之前要干的</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logBeforeController</span><span class="token punctuation">(</span>JoinPoint joinPoint<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        RequestAttributes requestAttributes <span class="token operator">=</span> RequestContextHolder<span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这个RequestContextHolder是Springmvc提供来获得请求的东西</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">// 记录下请求内容</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"################URL : "</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"################HTTP_METHOD : "</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//请求方式get/post</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"################IP : "</span> <span class="token operator">+</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"################THE ARGS OF THE CONTROLLER : "</span> <span class="token operator">+</span> Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>joinPoint<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//下面这个getSignature().getDeclaringTypeName()是获取包+类名的   然后后面的joinPoint.getSignature.getName()获取了方法名</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"################CLASS_METHOD : "</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaringTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> joinPoint<span class="token punctuation">.</span><span class="token function">getSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></code></pre><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p><strong>@Aspect和@Component</strong></p><p>首先，这个@Aspect注释告诉Spring这是个切面类，然后@Compoment将转换成Spring容器中的bean或者是代理bean。 总之要写切面这两个注解一起用就是了。</p><p>既然是切面类，那么肯定是包含PointCut还有Advice两个要素的，下面对几个注解展开讲来看看在@Aspect中是怎么确定切入点（PointCut）和增强通知（Advice）的。</p><p><strong>@PointCut(表达式)</strong></p><p>切入点，包含表达式、签名两部分，</p><p>表达式是拿来确定切入点的位置的，说白了就是通过一些规则来确定，哪些方法是要增强的，也就是要拦截哪些方法。</p><p>签名就是方法名，没有实际用处，就是唯一标识</p><p><strong>@Before(签名/表达式)</strong></p><p>标注在通知方法上，标识在方法前执行……</p><p>然后看到注解下面的方法，就是描述advice的，我们看到有个参数<strong>JoinPoint</strong>，这个东西代表着织入增强处理的连接点。JoinPoint包含了几个很有用的参数：</p><ul><li>Object[] getArgs：返回目标方法的参数</li><li>Signature getSignature：返回目标方法的签名</li><li>Object getTarget：返回被织入增强处理的目标对象</li><li>Object getThis：返回AOP框架为目标对象生成的代理对象</li></ul><p>除了注解@Around的方法外，其他都可以加这个JoinPoint作参数。@Around注解的方法的参数一定要是ProceedingJoinPoint，下面会介绍。</p><p><strong>@Around</strong></p><p>环绕通知，参数一定要是ProceedingJoinPoint，我们可以把它看作被增强方法的替身，这个proceedingJoinPoint有个proceed（）方法，相当于就是那切入点的那个方法执行，简单地说就是让目标方法执行，然后这个方法会返回一个对象，这个对象就是那个切入点所在位置的方法所返回的对象。</p><p><strong>@AfterReturning</strong></p><p>执行后通知，这个注解可以指定两个属性，第一个是pointcut切入点表达式/签名，第二个是returning属性，表明可以在Advice的方法中有目标方法返回值的形参。</p><p><strong>@AfterThrowing</strong></p><p>异常抛出增强，在异常抛出后织入的增强。有点像上面的@AfterReturning，这个注解也是有两个属性，pointcut和throwing。</p><hr><h2 id="RequestContextHolder"><a href="#RequestContextHolder" class="headerlink" title="RequestContextHolder"></a>RequestContextHolder</h2><p>这里还要提到上面用到的一个类，java类中想要获得request和response对象，可以使用springmvc提供的这个类。</p><pre class=" language-java"><code class="language-java">RequestAttributes requestAttributes <span class="token operator">=</span> RequestContextHolder<span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//从session里面获取对应的值</span>String str <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> requestAttributes<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>RequestAttributes<span class="token punctuation">.</span>SCOPE_SESSION<span class="token punctuation">)</span><span class="token punctuation">;</span> HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>HttpServletResponse response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span>requestAttributes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>request能获得什么信息</strong></p><p>请求URL：<code>request.getRequestURL().toString())</code></p><p>请求方式(get/post)：<code>request.getMethod()</code></p><p>请求IP：<code>request.getRemoteAddr()</code></p><p><strong>joinPoint能获得什么信息</strong></p><p>包名：<code>joinPoint.getSignature().getDeclaringTypeName()</code></p><p>方法名：<code>joinPoint.getSignature().getName()</code></p><p>方法参数：<code>joinPoint.getArgs()</code></p>]]></content>
      
      
      <categories>
          
          <category> Spring Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/12/03/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-ba-hou-duan-zhi-liu-yan-ban/"/>
      <url>/2020/12/03/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-ba-hou-duan-zhi-liu-yan-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot博客（八）（后端之留言板）"><a href="#springboot博客（八）（后端之留言板）" class="headerlink" title="springboot博客（八）（后端之留言板）"></a>springboot博客（八）（后端之留言板）</h1><h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201203112243.png"></p><h3 id="功能分析"><a href="#功能分析" class="headerlink" title="功能分析"></a>功能分析</h3><ol><li>和评论类似</li><li>对站点进行留言，回复</li><li>留言显示<ol><li>查询留言列表的时候，需要将留言和回复加以区分，根据留言功能来看，有父留言、子留言（回复），并且父子留言在前端显示的位置有不同，这里细说一下查询：<ul><li>根据id为“-1”和博客id查询出所有父留言（父级留言id为‘-1’）</li><li>根据父留言的id查询出一级子回复</li><li>根据子回复的id循环迭代查询出所有子集回复</li><li>将查询出来的子回复放到一个集合中</li></ul></li></ol></li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>编写repository</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MessageRepository</span> <span class="token keyword">extends</span> <span class="token class-name">JpaRepository</span><span class="token operator">&lt;</span>Message<span class="token punctuation">,</span>Long<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//查找父级留言</span>    List<span class="token operator">&lt;</span>Message<span class="token operator">></span> <span class="token function">findAllByParentMessageNull</span><span class="token punctuation">(</span>Sort sort<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>编写service</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查找留言信息</span>List<span class="token operator">&lt;</span>Message<span class="token operator">></span> <span class="token function">listMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存留言信息</span>Message <span class="token function">saveMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>Message<span class="token operator">></span> <span class="token function">listMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Sort sort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sort</span><span class="token punctuation">(</span>Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">,</span><span class="token string">"createTime"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    List<span class="token operator">&lt;</span>Message<span class="token operator">></span> parentMessage <span class="token operator">=</span> messageRepository<span class="token punctuation">.</span><span class="token function">findAllByParentMessageNull</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//查找父级留言</span>    <span class="token keyword">return</span> <span class="token function">eachMessage</span><span class="token punctuation">(</span>parentMessage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用方法</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> Message <span class="token function">saveMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Long parentMessageId <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getParentMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//前端传来的是-1或者回复是传来的父id</span>    <span class="token comment" spellcheck="true">//前端只传来的id,我们需要存放的是message对象，所以进行以下操作</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>parentMessageId <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//有父级</span>        message<span class="token punctuation">.</span><span class="token function">setParentMessage</span><span class="token punctuation">(</span>messageRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>parentMessageId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        message<span class="token punctuation">.</span><span class="token function">setParentMessage</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    message<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Message m <span class="token operator">=</span> messageRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> m<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    将数据另外存在一个list中，避免改变表中数据     */</span><span class="token keyword">private</span> List<span class="token operator">&lt;</span>Message<span class="token operator">></span> <span class="token function">eachMessage</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Message<span class="token operator">></span> parents<span class="token punctuation">)</span><span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>Message<span class="token operator">></span> messageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>Message parent <span class="token operator">:</span> parents<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历父留言</span>        Message m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>        messageView<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加到集合中</span>    <span class="token punctuation">}</span>    <span class="token function">combineChildren</span><span class="token punctuation">(</span>messageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用方法</span>    <span class="token keyword">return</span> messageView<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    遍历所有一级子回复     */</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">combineChildren</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Message<span class="token operator">></span> messages<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>Message parent<span class="token operator">:</span> messages<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历父留言</span>        List<span class="token operator">&lt;</span>Message<span class="token operator">></span> firstChilds <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getReplayMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获得一级子留言</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>Message firstChild <span class="token operator">:</span> firstChilds<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历子留言</span>            <span class="token function">recursively</span><span class="token punctuation">(</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用方法</span>        <span class="token punctuation">}</span>        parent<span class="token punctuation">.</span><span class="token function">setReplayMessage</span><span class="token punctuation">(</span>temReplys<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将所有子留言，加入到父留言中</span>        temReplys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清空临时存放子留言的集合</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">private</span> List<span class="token operator">&lt;</span>Message<span class="token operator">></span> temReplys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//临时存放子留言的集合</span><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">recursively</span><span class="token punctuation">(</span>Message firstChild<span class="token punctuation">)</span><span class="token punctuation">{</span>    temReplys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将一级子留言存放进临时集合中</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>firstChild<span class="token punctuation">.</span><span class="token function">getReplayMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果一级子留言还有子留言</span>        List<span class="token operator">&lt;</span>Message<span class="token operator">></span> nextChilds <span class="token operator">=</span> firstChild<span class="token punctuation">.</span><span class="token function">getReplayMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获得二级子留言</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>Message nextChild <span class="token operator">:</span> nextChilds<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//遍历二级子留言</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span><span class="token function">getReplayMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如果二级子留言还有子留言</span>                <span class="token function">recursively</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//迭代（二级加入临时集合中，再看有没有更多的子留言）</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>编写controller</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${comment.avatar}"</span><span class="token punctuation">)</span><span class="token keyword">private</span> String avatar<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*    跳转到留言页面     */</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/message"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"message"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    片段刷新     */</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/messagecomment"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">messageComment</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"messages"</span><span class="token punctuation">,</span>messageService<span class="token punctuation">.</span><span class="token function">listMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"message :: messageList"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*    保存留言     */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/message"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">post</span><span class="token punctuation">(</span>Message message<span class="token punctuation">,</span> HttpSession session<span class="token punctuation">)</span><span class="token punctuation">{</span>    User user <span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//是管理员</span>        message<span class="token punctuation">.</span><span class="token function">setAvatar</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        message<span class="token punctuation">.</span><span class="token function">setAdminMessage</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        message<span class="token punctuation">.</span><span class="token function">setAvatar</span><span class="token punctuation">(</span>avatar<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    messageService<span class="token punctuation">.</span><span class="token function">saveMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"redirect:/messagecomment"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>前端渲染</p><p>```html</p><!-- 新增留言--><input type="hidden" name="parentMessage.id" value="-1"><input type="text" name="nickname" placeholder="Id" th:value="${session.user}!=null ? ${session.user.nickname}"><input type="text" name="email" placeholder="Email" th:value="${session.user}!=null ? ${session.user.email}"><!--留言区--><div class="comment" th:each="message : ${messages}">    <a class="avatar">        <img src="/2020/12/03/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-ba-hou-duan-zhi-liu-yan-ban/static/image/avatar.png" th:src="@{${message.avatar}}">    </a>    <div class="content">        <a class="author">            <span th:text="${message.nickname}">Matt</span>            <div class="ui mini basic teal left pointing label m-padded-mini" th:if="${message.adminMessage}">博主</div>        </a>        <div class="metadata">            </div></div></div></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot博客（七）（后端之音乐盒/前端页面优化）</title>
      <link href="/2020/12/02/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-qi-hou-duan-zhi-yin-le-he-qian-duan-ye-mian-you-hua/"/>
      <url>/2020/12/02/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-qi-hou-duan-zhi-yin-le-he-qian-duan-ye-mian-you-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot博客（七）（后端之音乐盒-前端页面优化）"><a href="#springboot博客（七）（后端之音乐盒-前端页面优化）" class="headerlink" title="springboot博客（七）（后端之音乐盒/前端页面优化）"></a>springboot博客（七）（后端之音乐盒/前端页面优化）</h1><h2 id="音乐盒"><a href="#音乐盒" class="headerlink" title="音乐盒"></a>音乐盒</h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202155624.png"></p><h3 id="功能分析"><a href="#功能分析" class="headerlink" title="功能分析"></a>功能分析</h3><ol><li>音乐播放</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>搭建页面</p><p>直接套用图片墙的网页，加上网易云的链接即可</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span>800</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span>400</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//music.163.com/outchain/player?type<span class="token punctuation">=</span>0&amp;id<span class="token punctuation">=</span>2153548870&amp;auto<span class="token punctuation">=</span>1&amp;height<span class="token punctuation">=</span>430<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><blockquote><p>网易云音乐链接获取：</p><ol><li>进入页面选择喜欢的歌单</li><li>点击生成外部链接</li><li>有的歌单因为版权原因不能生成，多找几个试一下</li></ol></blockquote></li><li><p>编写controller</p><ol><li>跳转到音乐盒界面</li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/music"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">music</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"music"</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ol><h2 id="页面功能优化"><a href="#页面功能优化" class="headerlink" title="页面功能优化"></a>页面功能优化</h2><h3 id="index-html页面"><a href="#index-html页面" class="headerlink" title="index.html页面"></a>index.html页面</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202180930.png"></p><blockquote><ol><li>顶部图片美化</li><li>图标显示信息</li><li>导航隐藏回显</li></ol></blockquote><pre class=" language-html"><code class="language-html">// 显示微信$('.wechat').popup({    popup : $('.wechat-qr'),    position: 'bottom center'});// 显示邮箱$('.email').popup();// 导航栏显示var waypoint = new Waypoint({      element: document.getElementById('waypoint'),      handler: function(direction) {        if (direction == 'down') {          $('#nav').show(500);        } else {          $('#nav').hide(500);        }        console.log('Scrolled to waypoint!  ' + direction);      }    })</code></pre><h3 id="顶部图片"><a href="#顶部图片" class="headerlink" title="顶部图片"></a>顶部图片</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202180750.png"></p><p>分类、标签、归档、搜索、音乐、图片、友链、博客详情、关于我</p><p>全部加上了顶部图片，并且设置为动态图片获取</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-bg-type_outer<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">40%</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://api.ixiaowai.cn/gqapi/gqapi.php<span class="token punctuation">"</span></span>  <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ui m-bg image<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-bg-class_cover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ui container<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span> relative <span class="token punctuation">;</span><span class="token property">bottom</span><span class="token punctuation">:</span> -<span class="token number">540</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-font-size-title m-right-bottom<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">'STXingkai'</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>博客分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m-font-size-text-init-title m-margin-top<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>记忆是一种相聚的方式，放下是一种自由的形式。不必悲伤，不必忧愁，邂逅的回忆都是美好的故事<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><h3 id="归档"><a href="#归档" class="headerlink" title="归档"></a>归档</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202180841.png"></p><p>使用timeline插件</p><ol><li><p>在<code>lib</code>中加入timeline的js，<code>css</code>中加入css</p></li><li><p>加入链接</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../static/css/timeline.css<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/css/timeline.css}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../static/lib/timeline/timeline.js<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/lib/timeline/timeline.js}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre></li><li><p>中间内容</p><p>```html</p><div class="doc-container m-padded-tb-massive m-opacity" id="doc-container">    <th:block th:each="item : ${archiveMap}">        <section class="timeline">            <ul>                <li class="" th:each="blog : ${item.value}">                    <div>                        </div></li></ul></section></th:block></div></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot博客（六）（后端之友链/相册）</title>
      <link href="/2020/12/01/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-liu-hou-duan-zhi-you-lian-xiang-ce/"/>
      <url>/2020/12/01/xiang-mu/ge-ren-bo-ke-wang-zhan/springboot-bo-ke-liu-hou-duan-zhi-you-lian-xiang-ce/</url>
      
        <content type="html"><![CDATA[<h1 id="springboot博客（六）（后端之友链-相册）"><a href="#springboot博客（六）（后端之友链-相册）" class="headerlink" title="springboot博客（六）（后端之友链/相册）"></a>springboot博客（六）（后端之友链/相册）</h1><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h2><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202020214.png"></p><p><img src="https://cdn.jsdelivr.net/gh/fenghen0918/jm-imgs/markdown/20201202020235.png"></p><h3 id="功能分析"><a href="#功能分析" class="headerlink" title="功能分析"></a>功能分析</h3><ol><li>对友链的增加、删除、修改、查找</li><li>修改时回显数据</li><li>添加时判断是否相同</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><ol><li><p>编写实体类，生成数据库</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Id</span><span class="token annotation punctuation">@GeneratedValue</span><span class="token keyword">private</span> Long id<span class="token punctuation">;</span><span class="token keyword">private</span> String blogaddress<span class="token punctuation">;</span><span class="token keyword">private</span> String blogname<span class="token punctuation">;</span><span class="token annotation punctuation">@Temporal</span><span class="token punctuation">(</span>TemporalType<span class="token punctuation">.</span>TIMESTAMP<span class="token punctuation">)</span><span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建时间</span><span class="token keyword">private</span> String pictureaddress<span class="token punctuation">;</span></code></pre></li><li><p>搭建友链添加、友链显示页面</p></li><li><p>编写service</p><ol><li>查找所有</li><li>通过id查找一个</li><li>分页查找</li><li>保存</li><li>修改</li><li>删除</li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>FriendLink<span class="token operator">></span> <span class="token function">listFriendLinks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> friendLinkRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> FriendLink <span class="token function">saveFriendLink</span><span class="token punctuation">(</span>FriendLink friendLink<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> friendLinkRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>friendLink<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> FriendLink <span class="token function">getFriendLink</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> friendLinkRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> Page<span class="token operator">&lt;</span>FriendLink<span class="token operator">></span> <span class="token function">listFriendLink</span><span class="token punctuation">(</span>Pageable pageable<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> friendLinkRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> FriendLink <span class="token function">updateFriendLink</span><span class="token punctuation">(</span>Long id<span class="token punctuation">,</span> FriendLink friendLink<span class="token punctuation">)</span> <span class="token punctuation">{</span>    FriendLink f <span class="token operator">=</span> friendLinkRepository<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>f <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NotFindException</span><span class="token punctuation">(</span><span class="token string">"友链不存在！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    BeanUtils<span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>friendLink<span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> f<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteFriendLink</span><span class="token punctuation">(</span>Long id<span class="token punctuation">)</span> <span class="token punctuation">{</span>    friendLinkRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li><li><p>编写repository</p></li><li><p>编写controller</p><ol><li>friend<ol><li>跳转到友链管理页面</li><li>分页查询保存到model中</li></ol></li><li>input<ol><li>跳转到友链新增页面</li><li>new一个新对象，为了回显不报错</li></ol></li><li>post<ol><li>友链新增</li><li>向RedirectAttributes中增加提示消息</li><li>重定向到friend的请求中</li></ol></li><li>editInput<ol><li>跳转到友链修改页面</li><li>向model中存储friendLink对象</li></ol></li><li>editPost<ol><li>友链修改</li><li>向RedirectAttributes中增加提示消息</li><li>重定向到friend的请求中</li></ol></li><li>delete<ol><li>友链删除</li><li>向RedirectAttributes中增加提示消息</li><li>重定向到friend的请求中</li></ol></li></ol><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//跳转到友链管理页面</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/friendlinks"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">friend</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PageableDefault</span><span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>sort <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"id"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>direction <span class="token operator">=</span> Sort<span class="token punctuation">.</span>Direction<span class="token punctuation">.</span>DESC<span class="token punctuation">)</span> Pageable pageable<span class="token punctuation">,</span>                     Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"page"</span><span class="token punctuation">,</span>friendLinkService<span class="token punctuation">.</span><span class="token function">listFriendLink</span><span class="token punctuation">(</span>pageable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"admin/friendlinks"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//跳转到友链新增页面</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/friendlinks/input"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">input</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span><span class="token punctuation">{</span>    model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"friendlink"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">FriendLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"admin/friendlinks-input"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//跳转到编辑页面</span><span class="tok